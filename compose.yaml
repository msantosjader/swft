services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: swft # Database name
      POSTGRES_USER: user # Database user
      POSTGRES_PASSWORD: password # Database password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d swft"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    restart: always

  app:
    build: .
    environment:
      PORT: 5000
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: swft
      DB_USER: user
      DB_PASSWORD: password
      # Other environment variables will be read from .env file
      USER_ID: "${UID}"
      GROUP_ID: "${GID}"
    user: "${USER_ID}:${GROUP_ID}"
    env_file:
      - .env
    ports:
      - "5000"
    deploy:
      replicas: 1
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network
    restart: always
    volumes:
      - ./data:/app/data # Mount local 'data' directory to '/app/data' in container
      - /etc/localtime:/etc/localtime:ro

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf # Mount Nginx configuration file
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    ports:
      - "${PORT}:80" # Exposing Nginx port on host
    networks:
      - app_network
    depends_on:
      - app
    restart: always

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge
